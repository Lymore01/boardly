<.header>
  <.back navigate={~p"/boards"}>Back to boards</.back>
  Board: <%= @board.name %>
  <:subtitle>
    <%= @board.description %>
  </:subtitle>
  <:actions>
    <.link patch={~p"/boards/#{@board}/show/edit"} phx-click={JS.push_focus()}>
      <.button>Edit board</.button>
    </.link>

    <.link patch={~p"/boards/#{@board}/new_list"}>
      <.button>New List</.button>
    </.link>
    <.link patch={~p"/boards/#{@board}/add_members"} phx-click={JS.push_focus()}>
      <.button>
        Invite Members
      </.button>
    </.link>
    <.link patch={~p"/boards/#{@board}/members"} phx-click={JS.push_focus()}>
      <.button>
        View Members
      </.button>
    </.link>
  </:actions>
</.header>

<.modal
  :if={@live_action == :edit}
  id="board-modal"
  show
  on_cancel={JS.patch(~p"/boards/#{@board}")}
>
  <.live_component
    module={BoardlyWeb.BoardLive.FormComponent}
    id={@board.id}
    title={@page_title}
    action={@live_action}
    board={@board}
    patch={~p"/boards/#{@board}"}
  />
</.modal>

<div class="w-full h-full mt-6 flex flex-row gap-4">
  <%= for list <- @lists do %>
    <div class="bg-white shadow-lg rounded-lg w-80 p-4 flex flex-col gap-4">
      <.header class="flex justify-between items-center">
        <p class="text-lg font-semibold text-gray-700"><%= list.name %></p>
        <:actions>
          <.link
            patch={~p"/boards/#{@board.id}/list/#{list.id}/new_card"}
            phx-click={JS.push_focus()}
          >
            <.button>
              Add Card
            </.button>
          </.link>
        </:actions>
      </.header>

      <div class="flex flex-col gap-3">
        <%= for card <- list.cards do %>
          <div
            phx-click={JS.navigate(~p"/cards/#{card}")}
            class="bg-gray-50 border-l-4 border-blue-500 shadow-sm rounded-md p-3 flex flex-col gap-2 hover:shadow-lg transition-shadow cursor-pointer"
            id={"card-#{card.id}"}
          >
            <div class="flex justify-between w-full">
              <p class="text-sm font-medium text-gray-800 capitalize">
                <%= card.title %>
              </p>
              <.link
                patch={~p"/boards/#{@board.id}/list/#{list.id}/edit_card/#{card.id}"}
                phx-click={JS.push_focus()}
                class="text-gray-500 hover:text-blue-500"
              >
                <span class="text-xs underline">Edit</span>
              </.link>
            </div>

            <p class="text-xs text-gray-600"><%= card.description %></p>

            <div class="flex justify-between items-center mt-2">
              <p class="text-xs text-gray-600">Assign to:</p>
              <div class="flex items-center gap-2">
                <button
                  phx-click={JS.push("assign_member", value: %{card_id: card.id})}
                  class="text-gray-500 hover:text-blue-500"
                >
                  <i class="fas fa-user-plus"></i>
                </button>

                <button
                  phx-click={
                    JS.push("remove_card", value: %{card_id: card.id}) |> hide("#card-#{card.id}")
                  }
                  class="text-gray-500 hover:text-red-500"
                >
                  <i class="fas fa-trash-alt"></i>
                </button>
              </div>
            </div>
          </div>
        <% end %>
      </div>
    </div>
  <% end %>
</div>

<.modal
  :if={@live_action == :new_list}
  id="list-modal"
  show
  on_cancel={JS.patch(~p"/boards/#{@board}")}
>
  <.live_component
    module={BoardlyWeb.ListLive.FormComponent}
    id={:new_list}
    title={@page_title}
    board={@board.id}
    action={@live_action}
    list={@list}
    patch={~p"/boards/#{@board}"}
  />
</.modal>

<.modal
  :if={@live_action == :new_card}
  id="card-modal"
  show
  on_cancel={JS.patch(~p"/boards/#{@board}")}
>
  <.live_component
    module={BoardlyWeb.CardLive.FormComponent}
    id={:new_card}
    title={@page_title}
    list={@listId}
    action={@live_action}
    card={@card}
    patch={~p"/boards/#{@board}"}
  />
</.modal>

<.modal
  :if={@live_action == :edit_card}
  id="card-modal"
  show
  on_cancel={JS.patch(~p"/boards/#{@board}")}
>
  <.live_component
    module={BoardlyWeb.CardLive.FormComponent}
    id={@card.id || :edit_card}
    title={@page_title}
    action={@live_action}
    card={@card}
    patch={~p"/boards/#{@board}"}
  />
</.modal>

<.modal
  :if={@live_action == :add_members}
  id="card-modal"
  show
  on_cancel={JS.patch(~p"/boards/#{@board}")}
>
  <.live_component
    module={BoardlyWeb.BoardLive.InviteMembersComponent}
    id={:add_members}
    title={@page_title}
    action={@live_action}
    user={@user}
    board={@board.id}
    patch={~p"/boards/#{@board}"}
  />
</.modal>

<.modal
  :if={@live_action == :members}
  id="card-modal"
  show
  on_cancel={JS.patch(~p"/boards/#{@board}")}
>
  <.live_component
    module={BoardlyWeb.BoardLive.ViewMembersComponent}
    id={:members}
    title={@page_title}
    members={@members}
    patch={~p"/boards/#{@board}"}
  />
</.modal>

<%!-- Todo: assign card to members of the board, allow users to have their own dashboard to view assigned task and mark complete or in progress, users should be able to be assigned multiple boards and card, allow admin to view completed card - maybe change the color of the card on completion, progress, and todo  --%>
